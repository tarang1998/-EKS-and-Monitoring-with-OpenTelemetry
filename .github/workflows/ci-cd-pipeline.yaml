name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Adjust to your default branch if necessary
    paths:
      - 'open-telemetry-demo/src/**'
      - 'phase2/deployment/open-telemetry/**'
  workflow_dispatch:  # Optional: allows manual triggering


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker images
        run: |
          # Build and push Image for accounting service if changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/accountingservice/'; then
            echo "Building and pushing accounting service..."
            docker build -f ./open-telemetry-demo/src/accountingservice/Dockerfile -t ${{ secrets.ECR_REPOSITORY_ACCOUNTING_SERVICE }}:latest ./open-telemetry-demo
            docker push ${{ secrets.ECR_REPOSITORY_ACCOUNTING_SERVICE }}:latest
          fi

          # Build and push adservice if changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/adservice/'; then
            echo "Building and pushing ad service..." 
            sudo docker build -f ./open-telemetry-demo/src/adservice/Dockerfile -t ${{ secrets.ECR_REPOSITORY_AD_SERVICE }}:latest ./open-telemetry-demo
            docker push ${{ secrets.ECR_REPOSITORY_AD_SERVICE }}:latest
          fi

          # Build and push cart service if changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/cartservice/'; then
            echo "Building and pushing cart service..."
            docker build -f ./open-telemetry-demo/src/cartservice/src/Dockerfile -t ${{ secrets.ECR_REPOSITORY_CART_SERVICE }}:latest ./open-telemetry-demo
            docker push ${{ secrets.ECR_REPOSITORY_CART_SERVICE }}:latest
          fi

          # Build and push front-end service if changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/frontend/'; then
            echo "Building and pushing front end service..."
            docker build -f ./open-telemetry-demo/src/frontend/Dockerfile -t ${{ secrets.ECR_REPOSITORY_FRONTEND_SERVICE}}:latest ./open-telemetry-demo
            docker push ${{ secrets.ECR_REPOSITORY_FRONTEND_SERVICE }}:latest
          fi


  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install kubectl
        run: |
          sudo curl -LO "https://dl.k8s.io/release/v1.30.2/bin/linux/amd64/kubectl" # Change version and OS as needed
          sudo chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name openTelemetryCluster --region ${{ secrets.AWS_REGION }}

      - name: Deploy to EKS
        run: |

          # Deploy accounting service if changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/accountingservice/'; then
            echo "Deploying accounting service..."
            kubectl set image deployment/opentelemetry-demo-accountingservice accountingservice=${{ secrets.ECR_REPOSITORY_ACCOUNTING_SERVICE }}:latest --namespace otel-demo
          fi

          # Deploy ad service if changed 
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/adservice/'; then
            echo "Deploying ad service..."
            kubectl set image deployment/opentelemetry-demo-adservice adservice=${{ secrets.ECR_REPOSITORY_AD_SERVICE }}:latest --namespace otel-demo
          fi

          # Deploy cart service if changed 
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/cartservice/'; then
            echo "Deploying cart service..."
            kubectl set image deployment/opentelemetry-demo-cartservice cartservice=${{ secrets.ECR_REPOSITORY_CART_SERVICE }}:latest --namespace otel-demo
          fi

          # Deploy frontend service if changed 
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/frontend/'; then
            echo "Deploying frontend service..."
            kubectl set image deployment/opentelemetry-demo-frontend frontend=${{ secrets.ECR_REPOSITORY_FRONTEND_SERVICE }}:latest --namespace otel-demo
          fi

      - name: Update kubectl configurations 
        run: |

          # Update Kubernetes configurations if YAML files in accounting-service are changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^phase2/deployment/open-telemetry/6-webApplication/2-backend/accounting-service/.*\.yaml$'; then
            echo "Updating Kubernetes configurations..."
            kubectl apply -f phase2/deployment/open-telemetry/6-webApplication/2-backend/accounting-service/ --recursive --namespace otel-demo
          fi

          # Update Kubernetes configurations if YAML files in ad-service are changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^phase2/deployment/open-telemetry/6-webApplication/2-backend/ad-service/.*\.yaml$'; then
            echo "Updating Kubernetes configurations..."
            kubectl apply -f phase2/deployment/open-telemetry/6-webApplication/2-backend/ad-service/ --recursive --namespace otel-demo
          fi

          # Update Kubernetes configurations if YAML files in cart-service are changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^phase2/deployment/open-telemetry/6-webApplication/2-backend/cart-service/.*\.yaml$'; then
            echo "Updating Kubernetes configurations..."
            kubectl apply -f phase2/deployment/open-telemetry/6-webApplication/2-backend/cart-service/ --recursive --namespace otel-demo
          fi

          # Update Kubernetes configurations if YAML files in front end are changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^phase2/deployment/open-telemetry/6-webApplication/3-frontend/1-frontend-service/.*\.yaml$'; then
            echo "Updating Kubernetes configurations..."
            kubectl apply -f phase2/deployment/open-telemetry/6-webApplication/3-frontend/1-frontend-service/ --recursive --namespace otel-demo
          fi

      - name: Check if deployment succeeded
        run: |

          # Check if accounting service deployment succeeded
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qE '^(open-telemetry-demo/src/accountingservice/|phase2/deployment/open-telemetry/6-webApplication/2-backend/accounting-service/.*\.yaml$)'; then
            timeout 150 kubectl rollout status deployment/opentelemetry-demo-accountingservice --namespace otel-demo && echo "Rollout successful. Running success command..." || (echo "Deployment rollout timed out. Running fallback command..." && kubectl rollout undo deployment/opentelemetry-demo-accountingservice --namespace otel-demo)
          fi

          # Check if ad service deployment succeeded
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qE '^(open-telemetry-demo/src/adservice/|phase2/deployment/open-telemetry/6-webApplication/2-backend/ad-service/.*\.yaml$)'; then
            timeout 150 kubectl rollout status deployment/opentelemetry-demo-adservice --namespace otel-demo && echo "Rollout successful. Running success command..." || (echo "Deployment rollout timed out. Running fallback command..." && kubectl rollout undo deployment/opentelemetry-demo-adservice --namespace otel-demo)
          fi

          # Check if cart service deployment succeeded
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qE '^(open-telemetry-demo/src/cartservice/|phase2/deployment/open-telemetry/6-webApplication/2-backend/cart-service/.*\.yaml$)'; then
            timeout 150 kubectl rollout status deployment/opentelemetry-demo-cartservice --namespace otel-demo && echo "Rollout successful. Running success command..." || (echo "Deployment rollout timed out. Running fallback command..." && kubectl rollout undo deployment/opentelemetry-demo-cartservice --namespace otel-demo)
          fi

          # Check if frontend service deployment succeeded
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qE '^(open-telemetry-demo/src/frontend/|phase2/deployment/open-telemetry/6-webApplication/3-frontend/1-frontend-service/.*\.yaml$)'; then
            timeout 150 kubectl rollout status deployment/opentelemetry-demo-frontend --namespace otel-demo && echo "Rollout successful. Running success command..." || (echo "Deployment rollout timed out. Running fallback command..." && kubectl rollout undo deployment/opentelemetry-demo-frontend --namespace otel-demo)
          fi


      - name: Restart Pods 
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/accountingservice/'; then
            echo "Restarting accounting service pods"
            kubectl rollout restart deployment/opentelemetry-demo-accountingservice --namespace otel-demo
          fi

          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/adservice/'; then
            echo "Restarting ad service pods"
            kubectl rollout restart deployment/opentelemetry-demo-adservice --namespace otel-demo
          fi

          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/cartservice/'; then
            echo "Restarting cart service pods"
            kubectl rollout restart deployment/opentelemetry-demo-cartservice --namespace otel-demo
          fi

          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^open-telemetry-demo/src/frontend/'; then
            echo "Restarting frontend pods"
            kubectl rollout restart deployment/opentelemetry-demo-frontend --namespace otel-demo
          fi